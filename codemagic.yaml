workflows:
  # iOS Build Workflow
  build-ios:
    name: Build iOS App
    max_build_duration: 60
    environment:
      flutter: 3.27.4
      xcode: latest
      cocoapods: default
    scripts:
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Generate code
        script: |
          flutter packages pub run build_runner build --delete-conflicting-outputs
      - name: Run tests
        script: |
          flutter test || echo "No tests found, continuing..."
      - name: Build iOS
        script: |
          flutter build ios --release --no-codesign
      - name: Create iOS IPA
        script: |
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r -y Runner.ipa Payload/
          rm -rf Payload
          echo "iOS build completed successfully"
          unzip -l Runner.ipa | head -10
    artifacts:
      - build/ios/iphoneos/Runner.ipa
      - build/ios/iphoneos/Runner.app
    publishing:
      email:
        recipients:
          - a1392819747@gmail.com
        notify:
          success: true
          failure: false

  # Android Build Workflow
  build-android:
    name: Build Android App
    max_build_duration: 60
    environment:
      flutter: 3.27.4
    scripts:
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Fix plugin namespaces
        script: |
          echo "开始修复flutter_keyboard_visibility插件的namespace问题..."
          
          # 检查文件是否存在
          PLUGIN_PATH="$HOME/.pub-cache/hosted/pub.dev/flutter_keyboard_visibility-5.4.1/android/build.gradle"
          echo "检查插件路径: $PLUGIN_PATH"
          
          if [ -f "$PLUGIN_PATH" ]; then
            echo "找到插件文件，开始修复..."
            
            # 显示修复前的内容
            echo "修复前的内容:"
            head -20 "$PLUGIN_PATH"
            
            # 备份原文件
            cp "$PLUGIN_PATH" "$PLUGIN_PATH.backup"
            
            # 使用更简单的方法：直接echo追加namespace
            echo "    namespace \"com.jrai.flutter_keyboard_visibility\"" > /tmp/namespace_line.txt
            
            # 在android {后面插入namespace
            awk '/android \{/ { print; getline < "/tmp/namespace_line.txt"; print; next } 1' "$PLUGIN_PATH.backup" > "$PLUGIN_PATH"
            
            # 显示修复后的内容
            echo "修复后的内容:"
            head -20 "$PLUGIN_PATH"
            
            echo "修复完成！"
          else
            echo "错误：flutter_keyboard_visibility插件文件不存在"
            echo "查找相关文件:"
            find "$HOME/.pub-cache" -name "*flutter_keyboard_visibility*" -type d 2>/dev/null || echo "未找到相关目录"
          fi
      - name: Generate code
        script: |
          flutter packages pub run build_runner build --delete-conflicting-outputs
      - name: Run tests
        script: |
          flutter test || echo "No tests found, continuing..."
      - name: Build Android APK
        script: |
          flutter build apk --release
      - name: Build Android AAB
        script: |
          flutter build appbundle --release
      - name: Verify builds
        script: |
          echo "Android builds completed successfully"
          ls -la build/app/outputs/flutter-apk/
          ls -la build/app/outputs/bundle/release/
    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk
      - build/app/outputs/bundle/release/app-release.aab
    publishing:
      email:
        recipients:
          - a1392819747@gmail.com
        notify:
          success: true
          failure: false

  # Combined Build Workflow - iOS and Android
  build-all:
    name: Build All Platforms (iOS + Android)
    max_build_duration: 90
    environment:
      flutter: 3.27.4
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Fix plugin namespaces
        script: |
          echo "开始修复flutter_keyboard_visibility插件的namespace问题..."
          
          # 检查文件是否存在
          PLUGIN_PATH="$HOME/.pub-cache/hosted/pub.dev/flutter_keyboard_visibility-5.4.1/android/build.gradle"
          echo "检查插件路径: $PLUGIN_PATH"
          
          if [ -f "$PLUGIN_PATH" ]; then
            echo "找到插件文件，开始修复..."
            
            # 显示修复前的内容
            echo "修复前的内容:"
            head -20 "$PLUGIN_PATH"
            
            # 备份原文件
            cp "$PLUGIN_PATH" "$PLUGIN_PATH.backup"
            
            # 使用更简单的方法：直接echo追加namespace
            echo "    namespace \"com.jrai.flutter_keyboard_visibility\"" > /tmp/namespace_line.txt
            
            # 在android {后面插入namespace
            awk '/android \{/ { print; getline < "/tmp/namespace_line.txt"; print; next } 1' "$PLUGIN_PATH.backup" > "$PLUGIN_PATH"
            
            # 显示修复后的内容
            echo "修复后的内容:"
            head -20 "$PLUGIN_PATH"
            
            echo "修复完成！"
          else
            echo "错误：flutter_keyboard_visibility插件文件不存在"
            echo "查找相关文件:"
            find "$HOME/.pub-cache" -name "*flutter_keyboard_visibility*" -type d 2>/dev/null || echo "未找到相关目录"
          fi
      - name: Generate code
        script: |
          flutter packages pub run build_runner build --delete-conflicting-outputs
      - name: Run tests
        script: |
          flutter test || echo "No tests found, continuing..."
      - name: Build Android APK
        script: |
          flutter build apk --release
      - name: Build Android AAB
        script: |
          flutter build appbundle --release
      - name: Build iOS
        script: |
          flutter build ios --release --no-codesign
      - name: Create iOS IPA
        script: |
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r -y Runner.ipa Payload/
          rm -rf Payload
          echo "All builds completed successfully"
          unzip -l Runner.ipa | head -10
    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk
      - build/app/outputs/bundle/release/app-release.aab
      - build/ios/iphoneos/Runner.ipa
      - build/ios/iphoneos/Runner.app
    publishing:
      email:
        recipients:
          - a1392819747@gmail.com
        notify:
          success: true
          failure: false