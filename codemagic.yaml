workflows:
  # iOS Build Workflow
  build-ios:
    name: Build iOS App
    max_build_duration: 60
    environment:
      flutter: 3.27.4
      xcode: latest
      cocoapods: default
    scripts:
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Generate code
        script: |
          flutter packages pub run build_runner build --delete-conflicting-outputs
      - name: Run tests
        script: |
          flutter test || echo "No tests found, continuing..."
      - name: Build iOS
        script: |
          flutter build ios --release --no-codesign
      - name: Create iOS IPA
        script: |
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r -y Runner.ipa Payload/
          rm -rf Payload
          echo "iOS build completed successfully"
          unzip -l Runner.ipa | head -10
    artifacts:
      - build/ios/iphoneos/Runner.ipa
      - build/ios/iphoneos/Runner.app
    publishing:
      email:
        recipients:
          - a1392819747@gmail.com
        notify:
          success: true
          failure: false

  # Android Build Workflow
  build-android:
    name: Build Android App
    max_build_duration: 60
    environment:
      flutter: 3.27.4
    scripts:
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Fix plugin namespaces
        script: |
          echo "开始修复所有插件的namespace问题..."
          
          # 定义需要修复的插件列表
          declare -A PLUGINS=(
            ["flutter_keyboard_visibility-5.4.1"]="com.jrai.flutter_keyboard_visibility"
            ["flutter_openim_sdk-3.8.3+3"]="io.openim.flutter_openim_sdk"
            ["flutter_sensors-1.0.1"]="com.example.fluttersensors"
            ["scan-1.6.0"]="com.chavesgu.scan"
            ["sound_mode-2.0.2"]="com.tryingoutsomething.soundmode.sound_mode"
            ["uri_to_file-1.0.0"]="in.lazymanstudios.uri_to_file"
          )
          
          # 修复每个插件
          for plugin in "${!PLUGINS[@]}"; do
            namespace="${PLUGINS[$plugin]}"
            PLUGIN_PATH="$HOME/.pub-cache/hosted/pub.dev/$plugin/android/build.gradle"
            
            echo "检查插件: $plugin"
            echo "插件路径: $PLUGIN_PATH"
            
            if [ -f "$PLUGIN_PATH" ]; then
              echo "找到插件文件，开始修复 $plugin..."
              
              # 检查是否已经有namespace
              if grep -q "namespace" "$PLUGIN_PATH"; then
                echo "插件 $plugin 已经有namespace，跳过"
                continue
              fi
              
              # 备份原文件
              cp "$PLUGIN_PATH" "$PLUGIN_PATH.backup"
              
              # 创建namespace行
              echo "    namespace \"$namespace\"" > /tmp/namespace_line.txt
              
              # 在android {后面插入namespace
              awk '/android \{/ { print; getline < "/tmp/namespace_line.txt"; print; next } 1' "$PLUGIN_PATH.backup" > "$PLUGIN_PATH"
              
              echo "修复 $plugin 完成！"
            else
              echo "插件 $plugin 文件不存在，跳过"
            fi
          done
          
          echo "所有插件namespace修复完成！"
      - name: Generate code
        script: |
          flutter packages pub run build_runner build --delete-conflicting-outputs
      - name: Run tests
        script: |
          flutter test || echo "No tests found, continuing..."
      - name: Build Android APK
        script: |
          flutter build apk --release
      - name: Build Android AAB
        script: |
          flutter build appbundle --release
      - name: Verify builds
        script: |
          echo "Android builds completed successfully"
          ls -la build/app/outputs/flutter-apk/
          ls -la build/app/outputs/bundle/release/
    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk
      - build/app/outputs/bundle/release/app-release.aab
    publishing:
      email:
        recipients:
          - a1392819747@gmail.com
        notify:
          success: true
          failure: false

  # Combined Build Workflow - iOS and Android
  build-all:
    name: Build All Platforms (iOS + Android)
    max_build_duration: 90
    environment:
      flutter: 3.27.4
      xcode: latest
      cocoapods: default
    scripts:
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Fix plugin namespaces
        script: |
          echo "开始修复所有插件的namespace问题..."
          
          # 定义需要修复的插件列表
          declare -A PLUGINS=(
            ["flutter_keyboard_visibility-5.4.1"]="com.jrai.flutter_keyboard_visibility"
            ["flutter_openim_sdk-3.8.3+3"]="io.openim.flutter_openim_sdk"
            ["flutter_sensors-1.0.1"]="com.example.fluttersensors"
            ["scan-1.6.0"]="com.chavesgu.scan"
            ["sound_mode-2.0.2"]="com.tryingoutsomething.soundmode.sound_mode"
            ["uri_to_file-1.0.0"]="in.lazymanstudios.uri_to_file"
          )
          
          # 修复每个插件
          for plugin in "${!PLUGINS[@]}"; do
            namespace="${PLUGINS[$plugin]}"
            PLUGIN_PATH="$HOME/.pub-cache/hosted/pub.dev/$plugin/android/build.gradle"
            
            echo "检查插件: $plugin"
            echo "插件路径: $PLUGIN_PATH"
            
            if [ -f "$PLUGIN_PATH" ]; then
              echo "找到插件文件，开始修复 $plugin..."
              
              # 检查是否已经有namespace
              if grep -q "namespace" "$PLUGIN_PATH"; then
                echo "插件 $plugin 已经有namespace，跳过"
                continue
              fi
              
              # 备份原文件
              cp "$PLUGIN_PATH" "$PLUGIN_PATH.backup"
              
              # 创建namespace行
              echo "    namespace \"$namespace\"" > /tmp/namespace_line.txt
              
              # 在android {后面插入namespace
              awk '/android \{/ { print; getline < "/tmp/namespace_line.txt"; print; next } 1' "$PLUGIN_PATH.backup" > "$PLUGIN_PATH"
              
              echo "修复 $plugin 完成！"
            else
              echo "插件 $plugin 文件不存在，跳过"
            fi
          done
          
          echo "所有插件namespace修复完成！"
      - name: Generate code
        script: |
          flutter packages pub run build_runner build --delete-conflicting-outputs
      - name: Run tests
        script: |
          flutter test || echo "No tests found, continuing..."
      - name: Build Android APK
        script: |
          flutter build apk --release
      - name: Build Android AAB
        script: |
          flutter build appbundle --release
      - name: Build iOS
        script: |
          flutter build ios --release --no-codesign
      - name: Create iOS IPA
        script: |
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r -y Runner.ipa Payload/
          rm -rf Payload
          echo "All builds completed successfully"
          unzip -l Runner.ipa | head -10
    artifacts:
      - build/app/outputs/flutter-apk/app-release.apk
      - build/app/outputs/bundle/release/app-release.aab
      - build/ios/iphoneos/Runner.ipa
      - build/ios/iphoneos/Runner.app
    publishing:
      email:
        recipients:
          - a1392819747@gmail.com
        notify:
          success: true
          failure: false